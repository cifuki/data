80
Q:In my android application I can't use String.isEmpty() function which is situated in JDK 1.6. Android 2.1 lib doesn't have this function in java.lang.String class

I tried to input JRE System library to my project, because it has this function, but there was no effects.

How can I solve this problem and allow my application to use this function?
    
===============================================================================================
83
A:How can I solve this problem and allow my application to use this function?


You can't.  

Use String.length() == 0 instead.  It is backwards compatible all the way back to JDK 1.0 ... and with J2ME as well.

String.equals("") is another alternative.




  Are you sure that there is no way to configure Eclipse to put into a code classes from definite libraries?


Not if you want your app to run on a real Android device.  Java / Android platforms intentionally make it hard for you to tinker with the behaviour of the core class libraries.  For a start, you can only do it by modifying the Davlik equivalent of the bootclasspath or rt.jar file, and neither of these can be done within a running JVM.

That kind of tinkering has the risk of potentially breaking Java for other apps.  Even assuming that you can't compromise Android app separation directly (because of the process/uid separation mentioned below), malicious tweaks to the (shared) Java core classes could still potentially allow one app to interfere with, or steal information from another app.
    