30
Q:I am sharing an image, and this code works properly for devices before Android 6:

Intent shareIntent = new Intent(Intent.ACTION_SEND);
shareIntent.setType("image/*");
Uri uri = Uri.fromFile(new File(mFilename));
shareIntent.putExtra(Intent.EXTRA_STREAM, uri);
mContext.startActivity(Intent.createChooser(shareIntent, mChooserTitle));


However I get the toast error "can't attach empty files" when I try to share using Android 6.

I verified that the file exists and it's not zero-length.

Anyone has a solution for this?
    
===============================================================================================
22
A:One limitation of the Android 6.0 runtime permission system is that there will be corner cases that cause problems. What you encountered is one: trying to share a file on external storage to an app that does not have the runtime permission checks in place for that particular UI path.

I say that this is a "corner case" because, for this bug in the receiving app to affect the user, the user cannot have previously used that app and granted the necessary permission. Either:


The user has never used that app before, yet it still trying to share content to it, or
The user revoked the permission via Settings, but did not realize that it would break this bit of functionality


Both of those are low probability events.

You, as the sender, have two main options:


Switch away from using file:// Uri values, in favor of a file-serving ContentProvider like FileProvider, so the permission is no longer needed, or
Just living with the corner case

    