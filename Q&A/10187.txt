27
Q:I want to specify dependencies for my tests and after reading the Gradle Dependency Management Basics I though I could just add testCompile calls to my dependency declarations like this:

dependencies {
    compile group: 'com.squareup.dagger', name: 'dagger', version: '1.0.0'


    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'com.squareup', name: 'fest-android', version: '1.0.1'
}


This, however, fails with this error message:

> Could not find method testCompile() for arguments [{group=junit, name=junit, version=4.11}] on project ':simstatus'.


Am I missing something here?

(Full gradle build file for reference)
    
===============================================================================================
41
A:The android build system doesn't use the standard Gradle Java plugin. 

Its documentation says:


  As mentioned previously, next to the main sourceSet is the androidTest sourceSet, located by default in src/androidTest/
  
  Additionally, the sourceSet can be configured to have its own dependencies.
  By default, the application and its own dependencies are added to the test app classpath, but this can be extended with


dependencies {
    androidTestCompile 'com.google.guava:guava:11.0.2'
}


Update


  As of May 2017 Doc, testCompile is deprecated and you should
  use testImplementation


dependencies {
        androidTestImplementation 'com.google.guava:guava:11.0.2'
}

    