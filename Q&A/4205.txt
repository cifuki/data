56
Q:Under what conditions does ContentResolver.query() return null instead of a cursor object?  I've gotten empty cursors before but just realized that the method can also return null.  I haven't been able to trace the circumstances that this happens in, though.
    
===============================================================================================
67
A:I just stumbled over the same problem due to a user crash report I received today for an app of mine. If the Android documentation is unclear about something it helps looking at the source code. This is what I found about the causes for ContentResolver.query() returning null:


The content provider cannot be acquired. This can be due to a problem with the specified Uri or because it simply does not exist on the system. If the Uri is the problem the causes are: protocol is not content:// or the Uri does not have an authority string portion (Uri.getAuthority() == null).
The acquired provider's query method itself returns null.
The content provider could be acquired but a RemoteException was thrown during a query. 


Especially because of (2.) it's pretty much arbitrary what might be the cause for null as a result since there are no rules defined. But usually, if SQLite is the back-end of a ContentProvider you can expect at least some empty Cursor object as a result instead of just null.

Android system ContentProviders do some checks though before they return anything. If the input is not as expected there's the unlikely chance that null may be returned. But to be honest, that never happened to me before. I usually get an IllegalArgumentException in case of query parameter problems. Maybe some ContentProvider implementations return null in case of empty result sets.

Either way. It seems to be necessary to always check for null. Especially reason number (3.) is probably something that can happen on any Android device.
    