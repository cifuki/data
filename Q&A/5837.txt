43
Q:I use Dagger2 for DI in my android application. I found that I have to write inject method for every class that uses @Inject field. Is there a way that I can just inject the parent class so that I don't have to call inject on every subclass?
Take Activity for example. I have a BaseActivity that that every Activity extends from. Is there a way that I can just create an inject method in the component for BaseActivity and just call inject in BaseActivity's onCreate, and @inject fields in sub activities get injected automatically?
    
===============================================================================================
29
A:It cannot be done right now. 
Explanation by Gregory Kick (from here):


  Here's how members injection methods work:
  
  
  You can make a members injection method for any type that has @Inject anywhere in its class hierarchy. If it doesn't, you'll get an
  error.
  All @Injected members in the entire type hierarchy will be injected: the argument type and all supertypes.
  No members will be @Injected for subtypes of the argument type.
  


This issue was  discussed here and here, follow up these for updates. But it is unlikely to change soon, cause Dagger 2 is close to release.
    