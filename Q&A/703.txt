196
Q:Is there an universal way to find the location of an external SD card?

Please, do not be confused with External Storage. Environment.getExternalStorageState() returns path to internal SD mount point like "/mnt/sdcard". But the question is about external SD. How to get a path like "/mnt/sdcard/external_sd" (it may differ from device to device)?

I guess I will end with filtering of mount command by filesystem name. But I'm not sure this way is robust enough.
    
===============================================================================================
157
A:Environment.getExternalStorageState() returns path to internal SD mount point like "/mnt/sdcard"


No, Environment.getExternalStorageDirectory() refers to whatever the device manufacturer considered to be "external storage". On some devices, this is removable media, like an SD card. On some devices, this is a portion of on-device flash. Here, "external storage" means "the stuff accessible via USB Mass Storage mode when mounted on a host machine", at least for Android 1.x and 2.x.


  But the question is about external SD. How to get a path like "/mnt/sdcard/external_sd" (it may differ from device to device)?


Android has no concept of "external SD", aside from external storage, as described above.

If a device manufacturer has elected to have external storage be on-board flash and also has an SD card, you will need to contact that manufacturer to determine whether or not you can use the SD card (not guaranteed) and what the rules are for using it, such as what path to use for it.



UPDATE

Two recent things of note:

First, on Android 4.4+, you do not have write access to removable media (e.g., "external SD"), except for any locations on that media that might be returned by getExternalFilesDirs() and getExternalCacheDirs(). See Dave Smith's excellent analysis of this, particularly if you want the low-level details.

Second, lest anyone quibble on whether or not removable media access is otherwise part of the Android SDK, here is Dianne Hackborn's assessment:


  ...keep in mind: until Android 4.4, the official Android platform has not supported SD cards at all except for two special cases: the old school storage layout where external storage is an SD card (which is still supported by the platform today), and a small feature added to Android 3.0 where it would scan additional SD cards and add them to the media provider and give apps read-only access to their files (which is also still supported in the platform today).
  
  Android 4.4 is the first release of the platform that has actually allowed applications to use SD cards for storage.  Any access to them prior to that was through private, unsupported APIs.  We now have a quite rich API in the platform that allows applications to make use of SD cards in a supported way, in better ways than they have been able to before: they can make free use of their app-specific storage area without requiring any permissions in the app, and can access any other files on the SD card as long as they go through the file picker, again without needing any special permissions.

    