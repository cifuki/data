41
Q:I making complex layout and I using "include" for my custom component, like this

<include layout="@layout/topbar"/>


And topbar defined like this:

<?xml version="1.0" encoding="utf-8"?>
<my.package.TopBarLayout
 ... a lot of code


Now, I wanna pass my custom defined attributes to "topbar" like this

<include layout="@layout/topbar" txt:trName="@string/contacts"/>


But I have no result. I understood from that page that I can set no attributes, but id, height and width.

So, how can I pass my custom defined attributes to include, and how can I make it work?
    
===============================================================================================
65
A:I know this is an old question but I came across it and found that it is now possible thanks to Data Binding.

First you need to enable Data Binding in your project.

Then add data binding to the layout you want to include:

<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android">
<data>
    <variable name="title" type="java.lang.String"/>
</data>
<RelativeLayout xmlns:app="http://schemas.android.com/apk/res-auto"
            android:id="@+id/screen_header"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_gravity="top"
            android:gravity="center">

...

<TextView
           android:layout_width="wrap_content"
           android:layout_height="wrap_content"
           android:layout_centerInParent="true"
           android:textSize="20sp"
           android:textStyle="bold"
           android:text="@{title}"/>

...

</RelativeLayout>
</layout>


Finally, pass the variable from the main layout to the included layout like this:

<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android">
<data>
    ...
</data>    
...
xmlns:app="http://schemas.android.com/apk/res-auto"
...
<include layout="@layout/included_layout"
            android:id="@+id/title"
            app:title="@{@string/title}"/>
...
</layout>

    