41
Q:If I wanted to research how and where permissions [requested in the Mainfest.xml] were used in an Android app for the purposes of removing them is there an easy way of doing this? Does lint or findbugs offer some sort of support for tracking permissions used/abused in a project?
    
===============================================================================================
9
A:I came from the future to save your lives.

Here (in the future), LINT does check for missing permissions as you can see on LINT checks.


So, go to your AndroidManifest.xml and remove all tags <uses-permission> using Android permissions (meaning, don't delete permissions that belong to your app, such as UA_DATA and C2D_MESSAGE).
Then run LINT analysis. Click on Analyze then Inspect Code...
Look under Android -> Constant and Resource Type Mismatches
You should see all missing permissions.
Then you can just right-click them and select Apply fix "Add Permission". If you select this option, Android Studio will include one permission for every error. So you'll end up with multiple copies of the same permission on your Manifest file, just delete the duplicates. You can do it manually too.




Here is the description of the LINT rule:


  \xc2\xa0ID ResourceType
  
  \xc2\xa0Description
  
  This inspection looks at Android API calls that have been annotated with various support annotations (such as RequiresPermission or UiThread) and flags any calls that are not using the API correctly as specified by the annotations.  Examples of errors flagged by this inspection:
  
  
  Passing the wrong type of resource integer (such as R.string) to an API that expects a different type (such as R.dimen).
  Forgetting to invoke the overridden method (via super) in methods that require it
  Calling a method that requires a permission without having declared that permission in the manifest
  Passing a resource color reference to a method which expects an RGB integer value.
  
  
  ...and many more.  For more information, see the documentation at http://developer.android.com/tools/debugging/annotations.html




I'm using Android Studio 2.1.2.
    