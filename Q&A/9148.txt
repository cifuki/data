29
Q:I am creating in my app bunch of programmatic Views. As it appeared to be they all by default have the same id=-1. In order to work with them I need to generate unique id's. 

I have tried several approaches - random number generation and based on current time, but anyway there's no 100% guarantee that different Views will have different id's

Just wondering is there any more reliable way to generate unique ones? Probably there's special method/class?
    
===============================================================================================
41
A:Just an addition to the answer of @phantomlimb, 

while View.generateViewId() require API Level >= 17,
this tool is compatibe with all API.

according to current API Level,
it decide weather using system API or not.

so you can use ViewIdGenerator.generateViewId() and View.generateViewId() in the
same time and don't worry about getting same id

import java.util.concurrent.atomic.AtomicInteger;

import android.annotation.SuppressLint;
import android.os.Build;
import android.view.View;

/**
 * {@link View#generateViewId()}\xe8\xa6\x81\xe6\xb1\x82API Level >= 17,\xe8\x80\x8c\xe6\x9c\xac\xe5\xb7\xa5\xe5\x85\xb7\xe7\xb1\xbb\xe5\x8f\xaf\xe5\x85\xbc\xe5\xae\xb9\xe6\x89\x80\xe6\x9c\x89API Level
 * <p>
 * \xe8\x87\xaa\xe5\x8a\xa8\xe5\x88\xa4\xe6\x96\xad\xe5\xbd\x93\xe5\x89\x8dAPI Level,\xe5\xb9\xb6\xe4\xbc\x98\xe5\x85\x88\xe8\xb0\x83\xe7\x94\xa8{@link View#generateViewId()},\xe5\x8d\xb3\xe4\xbd\xbf\xe6\x9c\xac\xe5\xb7\xa5\xe5\x85\xb7\xe7\xb1\xbb\xe4\xb8\x8e{@link View#generateViewId()}
 * \xe6\xb7\xb7\xe7\x94\xa8,\xe4\xb9\x9f\xe8\x83\xbd\xe4\xbf\x9d\xe8\xaf\x81\xe7\x94\x9f\xe6\x88\x90\xe7\x9a\x84Id\xe5\x94\xaf\xe4\xb8\x80
 * <p>
 * =============
 * <p>
 * while {@link View#generateViewId()} require API Level >= 17, this tool is compatibe with all API.
 * <p>
 * according to current API Level, it decide weather using system API or not.<br>
 * so you can use {@link ViewIdGenerator#generateViewId()} and {@link View#generateViewId()} in the
 * same time and don't worry about getting same id
 * 
 * @author fantouchx@gmail.com
 */
public class ViewIdGenerator {
    private static final AtomicInteger sNextGeneratedId = new AtomicInteger(1);

    @SuppressLint("NewApi")
    public static int generateViewId() {

        if (Build.VERSION.SDK_INT < 17) {
            for (;;) {
                final int result = sNextGeneratedId.get();
                // aapt-generated IDs have the high byte nonzero; clamp to the range under that.
                int newValue = result + 1;
                if (newValue > 0x00FFFFFF)
                    newValue = 1; // Roll over to 1, not 0.
                if (sNextGeneratedId.compareAndSet(result, newValue)) {
                    return result;
                }
            }
        } else {
            return View.generateViewId();
        }

    }
}

    