41
Q:Are there any guidelines for what the location of the Android keystore "should" be?   I'm ready to release my first app and in Export Android Application I'm creating a new keystore it wants me to specify the location.

FWIW my Eclipse Workspace is on a shared network drive and I access it from any of 3 different development systems.  I've had no problems doing this.   The default location that came up for the keystore location seemed to be in the SDK directory tree, but that won't work for me because each PC has its own copy of the SDK installed.   I need it to be in a location which can be seen from any PC that I might be doing development work from, so I assume that means the network drive or some virtual location in the cloud.

Are there guidelines, rules, restrictions or other things I need to know about the location  the keystore?
    
===============================================================================================
30
A:As long as it's somewhere safe (i.e. backed up remotely in source control or by some other method) it doesn't really matter. If you lose the keystore somehow then you'll no longer be able to update your app on the android market and will be forced to remove it and re-upload it as a new app signed with a new key.

If you're worried about security, remember that both the keystore and individual keys within it can (and should) be password protected.

My keystore is in the root of my android eclipse workspace, which is also the root directory of the git repository I use for version control. Seeing as you are developing on multiple machines and would potentially want to do a release from any one of them, I'd suggest doing the same.
    