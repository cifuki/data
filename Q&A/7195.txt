36
Q:Can someone tell me the code to convert image into byte array and that byte array into base64 string.
i write the below code not getting proper result .

  String filepath = "/sdcard/Image/ic_launcher.jpg";
   File imagefile = new File(filepath);
        FileInputStream fis = null;
        try {
            fis = new FileInputStream(imagefile);
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        Bitmap bm = BitmapFactory.decodeStream(fis);
        ByteArrayOutputStream baos = new ByteArrayOutputStream();  
        bm.compress(Bitmap.CompressFormat.JPEG, 100 , baos);    
        byte[] b = baos.toByteArray(); 

        String encodedImage = Base64.encodeToString(b, Base64.DEFAULT);


result im getting is

 [-1, -40, -1, -32, 0, 16, 74, 70, 73, 70, 0, 1, 1, 1, 0, 72, 0, 72, 0, 0, -1, -20, 4, -7, 68, 117, 99, 107, 121, 0, 1, 0, 4, 0, 0, 0, 75, 0, 2, 4, -28, 0, 0, 2, 112, 0, 68, 0, 111, 0, 110, 0, 110, 0, 97, 0, 32, 0, 83, 0, 105, 0, 109, 0, 112, 0, 115, 0, 111, 0, 110, 0, 32, 0, 117, 0, 115, 0, 101, 0, 115, 0, 32, 0, 97, 0, 32, 0, 99, 0, 111, 0, 109, 0, 112, 0, 117, 0, 116, 0, 101, 0, 114, 0, 32, 0, 116, 0, 111, 0, 32, 0, 99, 0, 104, 0, 101, 0, 99, 0, 107, 0, 32, 0, 97, 0, 32, 0, 115, 0, 105, 0, 116, 0, 101, 0, 32, 0, 116, 0, 104, 0, 97, 0, 116, 0, 32, 0, 112, 0, 97, 0, 121, 0, 115, 0, 32, 0, 104, 0, 101, 0, 114, 0, 32, 0, 109, 0, 111, 0, 110, 0, 101, 0, 121, 0, 32, 0, 116, 0, 111, 0, 32, 0, 117, 0, 112, 0, 108, 0, 111, 0, 97, 0, 100, 0, 32, 0, 118, 0, 105, 0, 100, 0, 101, 0, 111, 0, 32, 0, 99, 0, 108, 0, 105, 0, 112, 0, 115, 0, 32, 0, 111, 0, 102, 0, 32, 0, 104, 0, 101, 0, 114, 0, 32, 0, 101, 0, 97, 0, 116, 0, 105, 0, 110, 0, 103, 0, 32, 0, 97, 0, 116, 0, 32, 0, 104, 0, 101, 0, 114, 0, 32, 0, 104, 0, 111, 0, 109, 0, 101, 0, 32, 0, 105, 0, 110, 0, 32, 0, 79, 0, 108, 0, 100, 0, 32, 0, 66, 0, 114, 0, 105, 0, 100, 0, 103, 0, 101, 0, 44, 0, 32, 0, 78, 0, 101, 0, 119, 0, 32, 0, 74, 0, 101, 0, 114, 0, 115, 0, 101, 0, 121, 0, 46, 0, 46, 0, 46, 0, 68, 0, 111, 0, 110, 0, 110, 0, 97, 0, 32, 0, 83, 0, 105, 0, 109, 0, 112, 0, 115, 0, 111, 0, 110, 0, 32, 0, 117, 0, 115, 0, 101, 0, 115, 0, 32, 0, 97, 0, 32, 0, 99, 0, 111, 0, 109, 0, 112, 0, 117, 0, 116, 0, 101, 0, 114, 0, 32, 0, 116, 0, 111, 0, 32, 0, 99, 0, 104, 0, 101, 0, 99, 0, 107, 0, 32, 0, 97, 0, 32, 0, 115, 0, 105, 0, 116, 0, 101, 0, 32, 0, 116, 0, 104, 0, 97, 0, 116, 0, 32, 0, 112, 0, 97, 0, 121, 0, 115, 0, 32, 0, 104, 0, 101, 0, 114, 0, 32, 0, 109, 0, 111, 0, 110, 0, 101, 0, 121, 0, 32, 0, 116, 0, 111, 0, 32, 0, 117, 0, 112, 0, 108, 0, 111, 0, 97, 0, 100, 0, 32, 0, 118, 0, 105, 0, 100, 0, 101, 0, 111, 0, 32, 0, 99, 0, 108, 0, 105, 0, 112, 0, 115, 0, 32, 0, 111, 0, 102, 0, 32, 0, 104, 0, 101, 0, 114, 0, 32, 0, 101, 0, 97, 0, 116, 0, 105, 0, 110, 0, 103, 0, 32, 0, 97, 0, 116, 0, 32, 0, 104, 0, 101, 0, 114, 0, 32, 0, 104, 0, 111, 0, 109, 0, 101, 0, 32, 0, 105, 0, 110, 0, 32, 0, 79, 0, 108, 0, 100, 0, 32, 0, 66, 0, 114, 0, 105, 0, 100, 0, 103, 0, 101, 0, 44, 0, 32, 0, 78, 0, 101, 0, 119, 0, 32, 0, 74, 0, 101, 0, 114, 0, 115, 0, 101, 0, 121, 0, 32, 0, 74, 0, 117, 0, 110, 0, 101, 0, 32, 0, 56, 0, 44, 0, 32, 0, 50, 0, 48, 0, 49, 0, 48, 0, 46, 0, 32, 0, 83, 0, 105, 0, 109, 0, 112, 0, 115, 0, 111, 0, 110, 0, 44, 0, 32, 0, 52, 0, 50, 0, 44, 0, 32, 0, 119, 0, 104, 0, 111, 0, 32, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 115, 0, 32, 0, 109, 0, 111, 0, 114, 0, 101, 0, 32, 0, 116, 0, 104, 0, 97, 0, 110, 0, 32, 0, 54, 0, 48, 0, 48, 0, 32, 0, 112, 0, 111, 0, 117, 0, 110, 0, 100, 0, 115, 0, 32, 0, 40, 0, 50, 0, 55, 0, 50, 0, 32, 0, 107, 0, 103, 0, 41, 0, 32, 0, 97, 0, 110, 0, 100, 0, 32, 0, 97, 0, 105, 0, 109, 0, 115, 0, 32, 0, 116, 0, 111, 0, 32, 0, 114, 0, 101, 0, 97, 0, 99, 0, 104, 0, 32, 0, 49, 0, 44, 0, 48, 0, 48, 0, 48, 0, 32, 0, 112, 0, 111, 0, 117, 0, 110, 0, 100, 0, 115, 0, 32, 0, 40, 0, 52, 0, 53, 0, 53, 0, 32, 0, 107, 0, 103, 0, 41, 0, 44, 0, 32, 0, 105, 0, 115, 0, 32, 0, 119, 0, 97, 0, 103, 0, 105, 0, 110, 0, 103, 0, 32, 0, 97, 0, 32, 0, 99, 0, 97, 0, 109, 0, 112, 0, 97, 0, 105, 0, 103, 0, 110, 0, 32, 0, 116, 0, 111, 0, 32, 0, 98, 0, 101, 0, 99, 0, 111, 0, 109, 0, 101, 0, 32, 0, 116, 0, 104, 0, 101, 0, 32, 0, 119, 0, 111, 0, 114, 0, 108, 0, 100, 0, 39, 0, 115, 0, 32, 0, 104, 0, 101, 0, 97, 0, 118, 0, 105, 0, 101, 0, 115, 0, 116, 0, 32, 0, 108, 0, 105, 0, 118, 0, 105, 0, 110, 0, 103, 0, 32, 0, 119, 0, 111, 0, 109, 0, 97, 0, 110, 0, 44, 0, 32, 0, 97, 0, 100, 0, 109, 0, 105, 0, 116, 0, 116, 0, 105, 0, 110, 0, 103, 0, 32, 0, 116, 0, 104, 0, 97, 0, 116, 0, 32, 0, 115, 0, 104, 0, 101, 0, 32, 0, 105, 0, 115, 0, 32, 0, 97, 0, 115, 0, 32, 0, 104, 0, 117, 0, 110, 0, 103, 0, 114, 0, 121, 0, 32, 0, 102, 0, 111, 0, 114, 0, 32, 0, 97, 0, 116, 0, 116, 0, 101, 0, 110, 0, 116, 0, 105, 0, 111, 0, 110, 0, 32, 0, 97, 0, 115, 0, 32, 0, 115, 0, 104, 0, 101, 0, 32, 0, 105, 0, 115, 0, 32, 0, 102, 0, 111, 0, 114, 0, 32, 0, 99, 0, 97, 0, 108, 0, 111, 0, 114, 0, 105, 0, 101, 0, 45, 0, 114, 0, 105, 0, 99, 0, 104, 0, 32, 0, 102, 0, 111, 0, 111, 0, 100, 0, 46, 0, 32, 0, 80, 0, 105, 0, 99, 0, 116, 0, 117, 0, 114, 0, 101, 0, 32, 0, 116, 0, 97, 0, 107, 0, 101, 0, 110, 0, 32, 0, 74, 0, 117, 0, 110, 0, 101, 0, 32, 0, 56, 0, 44, 0, 32, 0, 50, 0, 48, 0, 49, 0, 48, 0, 46, 0, 32, 0, 82, 0, 69, 0, 85, 0, 84, 0, 69, 0, 82, 0, 83, 0, 47, 0, 76, 0, 117, 0, 99, 0, 97, 0, 115, 0, 32, 0, 74, 0, 97, 0, 99, 0, 107, 0, 115, 0, 111, 0, 110, 0, 32, 0, 40, 0, 85, 0, 78, 0, 73, 0, 84, 0, 69, 0, 68, 0, 32, 0, 83, 0, 84, 0, 65, 0, 84, 0, 69, 0, 83, 0, 32, 0, 45, 0, 32, 0, 84, 0, 97, 0, 103, 0, 115, 0, 58, 0, 32, 0, 72, 0, 69, 0, 65, 0, 76, 0, 84, 0, 72, 0, 32, 0, 83, 0, 79, 0, 67, 0, 73, 0, 69, 0, 84, 0, 89, 0, 41, 0, 0, -1, -37, 0, 67, 0, 8, 6, 6, 7, 6, 5, 8, 7, 7, 7, 9, 9, 8, 10, 12, 20, 13, 12, 11, 11, 12, 25, 18, 19, 15, 20, 29, 26, 31, 30, 29, 26, 28, 28, 32, 36, 46, 39, 32, 34, 44, 35, 28, 28, 40, 55, 41, 44, 48, 49, 52, 52, 52, 31, 39, 57, 61, 56, 50, 60, 46, 51, 52, 50, -1, -37, 0, 67, 1, 9, 9, 9, 12, 11, 12, 24, 13, 13, 24, 50, 33, 28, 33, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, -1, -64, 0, 17, 8, 1, 32, 1, -52, 3, 1, 34, 0, 2, 17, 1, 3, 17, 1, -1, -60, 0, 28, 0, 0, 0, 7, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, -1, -60, 0, 76, 16, 0, 1, 3, 2, 4, 3, 6, 3, 5, 4, 8, 4, 5, 2, 7, 0, 1, 2, 3, 17, 0, 4, 5, 18, 33, 49, 6, 65, 81, 19, 34, 97, 113, -127, -111, 20, 50, -95, 7, 66, -79, -63, -16, 21, 35, 82, -47, 36, 51, 98, 114, -126, -94, -31, -15, 22, 83, -62, -46, 37, 99, -110, -109, -78, 8, 115, 52, 53, 68, 85, 100, -77, -30, -1, -60, 0, 26, 1, 0, 3, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, -1, -60, 0, 45, 17, 0, 2, 2, 2, 2, 2, 1, 3, 3, 3, 5, 1, 0, 0, 0, 0, 0, 1, 2, 17, 3, 33, 18, 49, 4, 65, 81, 19, 34, 97, 113, -79, -16, 20, -111, -47, 5, 35, 50, 66, -95, -31, -1, -38, 0, 12, 3, 1, 0, 2, 17, 3, 17, 0, 63, 0, -21, -96, -17, 64, -11, -92, -125, 74, -98, -75, -56, 116, 7, -17, 71, -52, -46, 65, -97, 10, 85, 0, 40, 80, -102, 33, 52, 40, 1, 92, -7, 82, 78, -44, 13, 36, -21, 64, 7, 67, -42, -109, 71, 64, 7, -46, -114, -109, -45, 106, 51, 64, 2, -116, -47, 80, 39, 77, 77, 0, 42, -118, -123, 9, -96, 3, -94, -10, -95, -25, 68, 117, -38, -104, 7, 66, -118, 104, 82, 0, 80, -95, -27, 69, 76, 0, 104, -89, -91, 3, 69, 64, 7, -67, 23, -67, 9, -94, -25, 64, 3, -34, -116, -111, 73, 49, 52, 9, 20, 0, 40, -113, -42, -118, -121, -122, -76, -64, 26, -46, 105, 81, 69, 20, -128, 17, -54, -123, 8, -93, -118, 64, 20, 82, -94, -124, 82, -128, -96, 4, -88, 119, 23, -24, 40, -109, 78, 44, 119, 21, 61, 69, 36, 10, 98, 22, -102, 113, 59, 82, 6, -44, -32, -90, -124, 56, 41, 66, -110, 41, 66, -87, 0, -79, 71, 69, 70, 61, 106, -47, 33, -51, 28, -47, 80, -96, 66, -88, -26, -109, 64, 26, 0, 57, -42, -114, 105, 51, 66, 105, 5, 11, -102, 20, -112, 124, 69, 29, 0, 42, -118, 104, 10, 28, -88, 0, 81, 107, 71, 66, -99, 0, 40, 81, 80, -102, 64, 84, -125, -46, -107, 34, -112, 15, -123, 43, 88, -48, 86, 38, -95, -119, -91, -45, 114, 121, -46, -3, -88, 0, -63, -93, -102, 42, 20, 0, 9, -92, -88, -47, -103, -92, 19, -50, -128, 20, 40, 77, 36, 31, 42, 19, -42, -128, 21, 52, 116, -119, -93, -15, -96, 5, 80, 59, 122, -47, 10, 7, 97, -74, -30, -128, 21, 52, 38, -109, 71, 64, 7, 66, -110, 77, 28, -48, 1, -48, -102, 76, -48, -96, 3, -102, 34, 104, 81, 19, 64, 2, -123, 10, 34, 69, 48, 4, -47, 19, 66, -128, -96, 2, 62, -76, -103, -91, 30, -76, -104, -90, 0, 20, 98, -120, 80, 19, 72, 5, 77, 39, -54, -124, -51, 21, 0, 44, 80, -46, -117, 125, -23, 67, 90, 64, 24, 20, -80, 5, 36, 68, -46, -58, -76, -60, 18, -57, 113, 95, -34, 20, -108, -118, 91, -122, 19, 29, 85, -7, 82, 69, 0, 44, 82, -59, 32, 82, -59, 52, 38, 44, 82, -123, 32, 82, -22, -48, -123, 81, -118, 64, -91, 77, 82, 1, 84, 116, 83, 66, -104, -125, -25, 67, -107, 21, 0, 117, -92, 1, -125, 66, 104, -124, -64, -95, 53, 32, 40, 116, -93, -92, -47, -118, 96, 42, 69, 9, -94, -95, 62, 84, 8, 30, -15, -46, -114, -118, 104, 72, -102, 96, 15, 57, -94, -34, -124, -47, 122, -48, 5, 35, 119, -115, 56, -128, -76, 25, 73, -25, 75, 23, 41, -102, -95, -78, 37, 41, 82, 12, 127, 16, -4, -22, 88, -41, 104, -84, 104, -44, -79, 114, -19, 73, 0, 54, -62, -100, 81, -97, -68, 18, 7, -103, -2, 64, -46, 62, 42, -20, 110, -59, -78, -68, 3, -85, 7, -36, -93, -14, -88, 15, 57, -39, 50, -73, 114, 41, 121, 6, 108, -88, 65, 82, -107, -32, 0, -44, -97, 42, -120, -116, 102, -43, 87, 1, -91, 118, -19, 44, -126, 66, 87, 106, -24, 49, -44, -9, 96, 122, -47, 64, -109, 52, 45, 92, -123, -50, 102, -36, 105, 67, 112, -79, -89, -95, 26, 31, -44, -45, -95, -44, -98, -66, -43, 66, 47, -112, -30, 101, -112, -91, 13, -91, 64, -89, -24, 105, 11, 122, -31, 99, -25, 41, 7, -110, 52, -94, -128, -48, 41, 99, -81, -91, 37, 74, 51, 89, -26, -46, -92, -72, 12, -86, 100, 107, 52, -1, 0, 15, 37, 45, 96, -84, -74, -128, 18, -128, -91, -108, -92, 108, 37, 68, -97, -87, 38, -114, -128, -71, -111, 66, 105, -68, -38, 81, -51, 32, 28, -109, 67, 53, 34, 122, -5, 81, -125, 64, 14, 77, 2, 118, -13, 20, -119, -91, 125, -47, -3, -31, 52, 0, -70, 42, 41, 52, 38, -128, 12, -102, 20, -109, 66, -104, 10, -96, 77, 36, -102, 18, 104, 1, 83, 68, 72, -25, 73, -102, 19, 64, 7, 52, 71, 78, -108, 38, -123, 0, 20, -7, -47, -47, 81, -19, 69, -128, 41, 42, -93, -92, -109, -19, 64, 21, 92, 65, -60, -104, 95, 12, -39, 11, -84, 73, -41, 6, 109, 27, 101, -122, -13, -72, -28, 111, 3, 64, 7, -119, 32, 120, -51, 115, 59, -1, 0, -74, -53, -27, -87, 67, 9, -64, -20, -38, 108, 24, 11, -67, 121, 110, -85, -52, -124, 101, 3, -36, -7, -42, -17, -120, -101, -73, -65, -62, -18, 123, 118, -112, -76, 40, 110, -95, 48, 6, -43, -61, 113, -101, 70, -84, -18, 22, -106, -13, -72, -127, -79, 73, 76, 15, 45, -87, -82, -10...

and at end of this byte array im getting this 3 dots and array is not completed ,so how can i get correct byte array 


base64 string is

/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEB
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCAEgAcwDASIA
AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA
AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3
ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA
AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK
U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD+wC2k
D/aRgsZBGA2OJRuthgfM5HcZYSlvMPE5n33aSAFBOfnUmIA5yZMG3BU7jIVwjDBO9XEhAaUyMb3P
t5g4BxvD+UVwR++VmtyOz4yvZt5cuCRKZc3ugko2k3ALZ8pRknMgUwHBOJAMeYcHEmVZsifzcXn5
AlbZyWsYpLRpOU27rltdJ3atpeLcpNwk/wBKSt1V0teZJ3UW0mvdV1K6d29Wm23ze9YT5sc3D7xC
vT/Xf8e/ydZNu3zOPv8AmeZH+7n87/TLMXzz3BwJ96w/PnZ53z2Y+7l9o+fH/LXeHzibzs3mday/
aQGAaHzPLBDHmX5rU4YjzMbTId2S5cOcmcyf6XoJ823+Pf5Kc/8ALb/j0/cnmTaF8ziT955nmjmf
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
71k87/SWru+nk+u7itlF7ttq+6aXvNy5sXGza7W+y1fXzXdP8W7NF5OdvGcmE8H7/wDx6/OvL/L8
3K/Pv3dZfM/fwJMPl4zny2OCvzEeTjH7yTaOOR+8Em85D+Yv2gthnHBOfL5DZ3YktOcb5Pu78kfP
vEhGZfMzcqpzCvOdwT3L4EPQ7nwE3fNy/mbusvm5uWvedrdG9m+76Qb1T663adpRd5THdrfW17N9
10Ut79XfunJtggzt6vuEYOD/AK0jysKPnfbtzy3z+Zvb5pfMP2iBRKcY+fcI1HL/ALwjysn/AFsn
AycL+9J3j5pN7/aplGdvU7guec7h+7xj94+R8/P3y2TzJ5h+0CjO3qdwXPOdw/d4x+8fI+fn75bJ
5k8w/aO36p/T9Gtff9G/P2m6aTtRt+HRrsukez/4dNAnzber7xGOD/rseTwvzvt2b/mPz+Zvb5pf
M/0iWBPMQt5LTcJ+8B4P7tOMeVcY9zv+YkvmTd9plprzt75Cfxdc+Xz/AK185z0+fd6yed/pMkLi
RS2wPxH85BbIMUZBG1Z8AgjqwJJLnzd32mTihuvVW0lrbXstfe793zauU1GLvp9+3ZdHF/Z6S77p
HypbTBjstwGLmMKoORIv+j5IGZAAolj/AHeGaQuV/eictdaCPB8vG7lOuf3n+p+ZuZNuMn/nqJMt
/rvNb7ZkW04baPs4IYRswyAJAPsYYqC0pChZVKlS5dWADTGc/a9FfPaL9zbb8ugBypEh3Wy5HyyE
YZ9xB80ymQDE5kJu/itbWs2vO93ooN6RejTt1d5KetnzfdJaX0X5ayk19m3Vy3tZ8l3NuTntxOcK
F3BzHnp+8Um3yMkNt4kUE/vBJ5jKDO07C72E+bb/AB7/ACU5/wCW3/Hp+5PMm0L5nEn7zzPNHM/m
/wCmc+s9w2xrgF+YuARiUKIem4uVUAnbxIzLIDic3DfathPm28W77zF1P+ux9n4PMu3b5nL/ALzz
PMb97P53+lnfe2iu+rsrve1+Vq7d27q6s6ik4vT59n/NJdI7XTaSbW9rSeti2lD7cgvnyghyfnPm
WIVcEt0HOW3h/MIZpjMDeWEn3bMjd5jQ5/6azf6Hz958EeYcD5o5PMXmfzj9rrp823+Pf5Kc/wDL
b/j0/cnmTaF8ziT955nmjmfzf9ME+bb/AB7/ACU5/wCW3/Hp+5PMm0L5nEn7zzPNHM/m/wCmO/Ra
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...

    
===============================================================================================
80
A:Try this:

// convert from bitmap to byte array
public byte[] getBytesFromBitmap(Bitmap bitmap) {
    ByteArrayOutputStream stream = new ByteArrayOutputStream();
    bitmap.compress(CompressFormat.JPEG, 70, stream);
    return stream.toByteArray();
}

// get the base 64 string
String imgString = Base64.encodeToString(getBytesFromBitmap(someImg), 
                       Base64.NO_WRAP);

    