251
Q:I am using Html.fromHtml to view html in a TextView.

Spanned result = Html.fromHtml(mNews.getTitle());
...
...
mNewsTitle.setText(result);


But Html.fromHtml is now deprecated in Android N+

What/How do I find the new way of doing this?
    
===============================================================================================
519
A:update:
as @Andy mentioned Google has created HtmlCompat which can be used instead of the method below. Add this dependency implementation 'androidx.core:core:1.0.1
 to the build.gradle file of your app. Make sure you use the latest version of androidx.core:core.

This allows you to use: 

HtmlCompat.fromHtml(html, HtmlCompat.FROM_HTML_MODE_LEGACY);


You can read more about the different flags on the HtmlCompat-documentation

original answer:
In Android N they introduced a new Html.fromHtml method. Html.fromHtml now requires an additional parameter, named flags. This flag gives you more control about how your HTML gets displayed. 

On Android N and above you should use this new method. The older method is deprecated and may be removed in the future Android versions. 

You can create your own Util-method which will use the old method on older versions and the newer method on Android N and above. If you don't add a version check your app will break on lower Android versions. You can use this method in your Util class. 

@SuppressWarnings("deprecation")
public static Spanned fromHtml(String html){
    if(html == null){
        // return an empty spannable if the html is null
        return new SpannableString("");
    }else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
        // FROM_HTML_MODE_LEGACY is the behaviour that was used for versions below android N
        // we are using this flag to give a consistent behaviour
        return Html.fromHtml(html, Html.FROM_HTML_MODE_LEGACY);
    } else {
        return Html.fromHtml(html);
    }
}


You can convert the HTML.FROM_HTML_MODE_LEGACY into an additional parameter if you want. This gives you more control about it which flag to use. 

You can read more about the different flags on the 
Html class documentation
    