54
Q:To reduce dependece of class, I want to send parameter (using generic class) to constructor that extends some class and implements interface, for example

public interface SomeInterface{
    public void someMethod();
}

public class MyFragment extends Fragment implements SomeInterface{
    //implementation
}

//here is classs, that I need to create. T must extend Fragment and implements 
//SomeInterface. But, I'm afraid, if I'll use MyFragment directly, it will create a
//dependence of SomeClass from MyFragment.

public class SomeClass /*generic?*/ {
    public SomeClass(T parent);
}


Is it possible?

Futher, using my T class, I want to create views, using T.getActivity() as Context.
    
===============================================================================================
121
A:T must extend Fragment and implement SomeInterface


In that case you could declare SomeClass as the following:

public class SomeClass<T extends Fragment & SomeInterface>


That would require an object of type T to both extend Fragment and implement SomeInterface.


  Further, using my T class, I want to create views, using T.getActivity() as Context.


I'm unfamiliar with Android, but if getActivity() is a public instance method declared in Fragment then will be entirely possible to call it on an instance of T, since the compiler will know all Ts must inherit that method.
    