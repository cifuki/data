33
Q:as the documentation of Android says, "Note that the Android testing API supports JUnit 3 code style, but not JUnit 4." (Testing Fundamentals). It should be clear that JUnit 4 cannot be used out of the box with Android.

But why is this the case? Is it because the tests are executed within the DVM (in that the Android Runtime only has support for JUnit 3)? On a JVM one on its own could choose the JUnit runtime that should be used. Isn't this possible within the DVM?
    
===============================================================================================
40
A:Update 2015/10

It is now possible via the AndroidJUnitRunner, which is part of the Android Testing Support Library. In short, you need to do the following in a Gradle-based project:


Add the dependencies:

dependencies {
    compile 'com.android.support:support-annotations:22.2.0'
    androidTestCompile 'com.android.support.test:runner:0.4.1'
}

Specify the testInstrumentationRunner:

android {
    defaultConfig {
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
}

Annotate your test class with @RunWith(AndroidJUnit4.class).
Write your tests in normal JUnit4 style.


Also see the Espresso setup instructions. Note that you don't need Espresso itself for plain JUnit4 tests.

Why it's needed

There are very little information I could find on the internet on this topic. The best I found was the info on InstrumentationTestRunner.

There are nothing preventing JUnit4 tests from running on an Android device just like any other Java code. However, the Android test framework does some additional work:


It sends test results back to your development machine over ADB.
It does instrumentation (I'm not sure what exactly this involves).


The above is performed by some extensions specifically for JUnit3.

This JUnit3-specific code seems to be part of the InstrumentationTestRunner which forms part of the core Android system. However, as is evident with AndroidJUnitRunner, it is possible to use a custom test runner that supports JUnit4 or other frameworks.
    