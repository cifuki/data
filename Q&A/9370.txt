29
Q:I am using Retrofit 2.0 to make api calls that return Observables. It all works good when the call went through fine and the response is as expected. Now let's say we have an error response, it throws an onError. I would like to read the response body even when it is an Error.

Example

@FormUrlEncoded
@POST("tokenLogin")
Observable<LoginResponse> loginWithToken(
        @Field("token") String pin
);


When the request and response are valid, I get the right observable and onError is being called as expected when there is an error.

Correct Response:

{ "status" : "authenticated" }


The Observable converts this into the right Observable and I can read the response as LoginResponse object.

Now, the Error Response is as follows:

{ "errorMessage" : "You need to take some xyz action" }


I would like to read that error response and display the message to the user. How do I go about doing that?
    
===============================================================================================
45
A:Just check if the throwable is an instance of HttpException and then you can access the retrofit response

if (e instanceof HttpException) {
    ResponseBody body = ((HttpException) e).response().errorBody();
    ...
}


Then you can use the converter to deserialize it (or do it yourself).
    