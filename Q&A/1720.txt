109
Q:I'm working on a fairly complex Android application that requires a somewhat large amount of data about the application (I'd say a total of about 500KB -- is this large for a mobile device?).  From what I can tell, any orientation change in the application (in the activity, to be more precise) causes a complete destruction and recreation of the activity.  Based on my findings, the Application class does not have the same life-cycle (i.e. it is, for all intents and purposes, always instantiated).  Does it make sense to store the state information inside of the application class and then reference it from the Activity, or is that generally not the "acceptable" method due to memory constraints on mobile devices?  I really appreciate any advice on this topic.  Thanks!
    
===============================================================================================
132
A:I don't think 500kb will be that big of a deal.

What you described is exactly how I tackled my problem of losing data in an activity.  I created a global singleton in the Application class and was able to access it from the activities I used.

You can pass data around in a Global Singleton if it is going to be used a lot.

public class YourApplication extends Application 
{     
     public SomeDataClass data = new SomeDataClass();
}


Then call it in any activity by:

YourApplication appState = ((YourApplication)this.getApplication());
appState.data.UseAGetterOrSetterHere(); // Do whatever you need to with the data here.


I discuss it here in my blog post, under the section "Global Singleton."
    