119
Q:I'm having several activities in my application. and flow is very complicated. When I click the Logout application naviagates to login Screen and from there user can exit by cancel buton (calling system.exit(0) )

when I exit or back button, system invokes an activity from stack :( how can I clear all the activities in the stack when i reach Login screen? calling finish() is not practical as there are so many activities and some activities should no be closed when they are active such as native camera invoking activity.

validateuser logoutuser = new validateuser();
logoutuser.logOut();
Intent loginscreen = new Intent(homepage.this, Login2.class);
(homepage.this).finish();
loginscreen.setFlags( Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NO_HISTORY);
startActivity(loginscreen);

    
===============================================================================================
307
A:Most of you are wrong. If you want to close existing activity stack regardless of what's in there and create new root, correct set of flags is the following:

intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);


From the doc:


  public static final int FLAG_ACTIVITY_CLEAR_TASK
  Added in API level 11 
  
  If set in an Intent passed to
  Context.startActivity(), this flag will cause any existing task that
  would be associated with the activity to be cleared before the
  activity is started. That is, the activity becomes the new root of an
  otherwise empty task, and any old activities are finished. This can
  only be used in conjunction with FLAG_ACTIVITY_NEW_TASK.

    