28
Q:The Android docs say that its meant for "supplemental information about an order" but at the same time it also says not to use this to send "actual data or content".

So what is the purpose of this  "developer payload"?  Why does this feature exist?  Can you describe a real-world practical example of how I can use it in my own In-app Billing implementation?
    
===============================================================================================
29
A:As aromero mentioned the developer payload field is limited in size. This is why the docs recommend not to use this key to send data or content. 

What you do instead is save the content to a database somewhere (e.g. on the user's device or your own server), and then put the record's index in the developer payload field. When you receive it back via the PURCHASE_STATE_CHANGED broadcast intent, you can associate it with the data in your database.

Note that the developer payload is not sent by the Market when using any of the test android item ids. You have to be using real in app purchase items.

Also, according to this (I have not verified this yet), you will not be receiving the developerPayload in DEBUG MODE. You need to sign your application to RELEASE MODE to receive developerPayload.

Lastly, as you commented below, the returned JSONObject (in response to GetPurchaseInformation) already includes orderId, productId, purchaseTime and more. So "developer payload" should actually be used for anything but to identify the purchase... i.e. the answer is the opposite of what has been suggested below. What you can use "developer payload" is to add some information not in the JSONObject, like purchaser's additional details (e.g. GPS location if enabled, device brand & model, etc.).
    