41
Q:Hi I was looking at the following Fragments example on the android site.

http://developer.android.com/guide/components/fragments.html#Example

I would like to know why certain methods are performed.

Why for instance, in the detailsFragment is the following method performed:

public static DetailsFragment newInstance(int index) {
    DetailsFragment f = new DetailsFragment();

    // Supply index input as an argument.
    Bundle args = new Bundle();
    args.putInt("index", index);
    f.setArguments(args);

    return f;
}


Could you not also simply instantiate the DetailsFragment and use a setter method to set index instead. Bypassing the whole setArguments.

What's the point of using setArguments in the first place? Could you not just use setters and getters?
    
===============================================================================================
38
A:You can use getters and setters, but by passing in a bundle you don't need to write that code, since it's already there. Also, I believe that these arguments are automatically passed in again if the screen orientation changes, which also makes life easier. 

Essentially, setArguments and getArguments is just a design pattern that Google suggests you follow:


  Every fragment must have an empty constructor, so it can be
  instantiated when restoring its activity's state. It is strongly
  recommended that subclasses do not have other constructors with
  parameters, since these constructors will not be called when the
  fragment is re-instantiated; instead, arguments can be supplied by the
  caller with setArguments(Bundle) and later retrieved by the Fragment
  with getArguments().
  http://developer.android.com/reference/android/app/Fragment.html


I take that to include setters which are needed for your Fragment to operate as well. Then again - there's nothing forcing you to do it this way, and as you know - it's not the only way things could be made to work.
    