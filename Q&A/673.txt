203
Q:I get an warning about [Accessibility]Missing contentDescription attribute on image in eclipse. This warning show at line 5 (declare ImageView) in XML code below.

This not make any error when build and run my application. But I really want to know why i get this warning.

This is my XML file:

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="fill_parent"
              android:layout_height="wrap_content">
    <ImageView
        android:id="@+id/contact_entry_image"
        android:src="@drawable/ic_launcher"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        />
    <TextView
        android:id="@+id/contact_entry_text"
        android:text=""
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:textSize="30sp"
        />

</LinearLayout>


Please help me regarding this and thanks for your reading.
    
===============================================================================================
258
A:Follow this link for solution: Android Lint contentDescription warning


  Resolved this warning by setting attribute android:contentDescription
  for my ImageView
  
  android:contentDescription="@string/desc"
  
  Android Lint support in ADT 16 throws this warning to ensure that
  image widgets provide a contentDescription
  
  This defines text that briefly describes the content of the view. This
  property is used primarily for accessibility. Since some views do not
  have textual representation this attribute can be used for providing
  such.
  
  Non-textual widgets like ImageViews and ImageButtons should use the
  contentDescription attribute to specify a textual description of the
  widget such that screen readers and other accessibility tools can
  adequately describe the user interface.


This link for explanation: Accessibility, It's Impact and Development Resources


  Many Android users have disabilities that require them to interact
  with their Android devices in different ways. These include users who
  have visual, physical or age-related disabilities that prevent them
  from fully seeing or using a touchscreen.
  
  Android provides accessibility features and services for helping these
  users navigate their devices more easily, including text-to-speech,
  haptic feedback, trackball and D-pad navigation that augments their
  experience. Android application developers can take advantage of these
  services to make their applications more accessible and also build
  their own accessibility services.


This guide is for making your app accessible: Making Apps More Accessible


  Making sure your application is accessible to all users is relatively
  easy, particularly when you use framework-provided user interface
  components. If you only use these standard components for your
  application, there are just a few steps required to ensure your
  application is accessible:
  
  
  Label your ImageButton, ImageView, EditText, CheckBox and other user
  interface controls using the android:contentDescription attribute.
  Make all of your user interface elements accessible with a directional
  controller, such as a trackball or D-pad.
  Test your application by turning on accessibility services like TalkBack
  and Explore by Touch,
  and try using your application using only directional controls.
  

    