87
Q:I want to have 2 selectable themes for my application. In order to do that, I defined some attributes, like this:

 <attr format="color" name="item_background" />


Then, I created both themes, like this:

  <style name="ThemeA">
     <item name="item_background">#123456</item>
 </style>

 <style name="ThemeB">
     <item name="item_background">#ABCDEF</item>
 </style>


This method works great, allowing me to create and modify several themes easily. The problem is that it seems that it can be used only in Views, and not in Drawables.

For example, referencing a value from a View inside a layout works:

 <TextView android:background="?item_background" />


But doing the same in a Drawable doesn't:

 <shape android:shape="rectangle">
     <solid android:color="?item_background" />
 </shape>


I get this error when running the application:

    java.lang.UnsupportedOperationException: Can't convert to color: type=0x2


If instead of ?item_background I use a hardcoded color, it works, but that doesn't allow me to use my themes. I also tried ?attr:item_background, but the same happens.

How could I do this? And why does it work in Views but not in Drawables? I can't find this limitation anywhere in the documentation...
    
===============================================================================================
152
A:In my experience it is not possible to reference an attribute in an xml drawable.
In order to make your theme you need to:


Create one xml drawable per theme.
Include the needed color into you drawable directly with the @color tag or #RGB format.


  



Make an attribute for your drawable in attrs.xml.

<?xml version="1.0" encoding="utf-8"?>
<resources>
   <!-- Attributes must be lowercase as we want to use them for drawables -->
   <attr name="my_drawable" format="reference" />
</resources>


Add your drawable to your theme.xml.

<style name="MyTheme" parent="@android:style/Theme.NoTitleBar">
   <item name="my_drawable">@drawable/my_drawable</item>
</style>


Reference your drawable in your layout using your attribute.

<TextView android:background="?my_drawable" />

    