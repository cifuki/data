34
Q:Although this is a "duplicate", the current answers are out of date and, mostly, no longer apply. I thought it would be good to provide an updated resource here, if possible, to save people time, as I have just done, researching this issue.

I've been googling around to see the latest information on being able to enable and disable mobile data from within an app (if wifi is not available).

This is one of the latest things I can find:
Did you know you can no longer Disable/Enable Data on lollipop from a widget?

There is an answer to that, I quote:


  There was never an API for it. Developers were using a workaround by calling the method via Reflections. All Google did was close this "exploit".


There is also this discussion:

   Replacement for setMobileDataEnabled() api
Which is Feb 2015.

There are these questions here:

How to disable Mobile Data on Android

This was asked in 2010 and the latest answer was updated with a one liner on Dec 2014.

Enable/disable data connection in android programmatically 

And this, the accepted answer in 2012.

What's the latest on this issue? 

Can it still be done?
    
===============================================================================================
11
A:I use a workaround which only works for rooted phones.

The setMobileDataEnabled method was removed from the ConnectivityManager but two methods getDataEnabled and setDataEnabled were added to the TelephonyManager for this functionality.

public void setMobileDataState(boolean mobileDataEnabled)
{
    try
    {
        TelephonyManager telephonyService = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);

        Method setMobileDataEnabledMethod = telephonyService.getClass().getDeclaredMethod("setDataEnabled", boolean.class);

        if (null != setMobileDataEnabledMethod)
        {
            setMobileDataEnabledMethod.invoke(telephonyService, mobileDataEnabled);
        }
    }
    catch (Exception ex)
    {
        Log.e(TAG, "Error setting mobile data state", ex);
    }
}

public boolean getMobileDataState()
{
    try
    {
        TelephonyManager telephonyService = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);

        Method getMobileDataEnabledMethod = telephonyService.getClass().getDeclaredMethod("getDataEnabled");

        if (null != getMobileDataEnabledMethod)
        {
            boolean mobileDataEnabled = (Boolean) getMobileDataEnabledMethod.invoke(telephonyService);

            return mobileDataEnabled;
        }
    }
    catch (Exception ex)
    {
        Log.e(TAG, "Error getting mobile data state", ex);
    }

    return false;
}


But you need to add this permission (MODIFY_PHONE_STATE) to the Manifest file otherwise you will get a SecurityException. 
    