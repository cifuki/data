40
Q:if i am defining such function in java file

  /** 
   * Adds two integers, returning their sum
   */
  public native int add( int v1, int v2 );


so i need to code in c file 

JNIEXPORT jint JNICALL Java_com_marakana_NativeLib_add
  (JNIEnv * env, jobject obj, jint value1, jint value2) {

  printf("\
 this is log messge \
");

        return (value1 + value2);
}


then from where this  printf will print it message ? 
In logcate i dont get it?

How can i debug any NDK application by putting log messages?
    
===============================================================================================
96
A:use __android_log_print() instead. You have to include header <android/log.h>

Sample Example. __android_log_print(ANDROID_LOG_DEBUG, "LOG_TAG", "\
 this is log messge \
");

You can also use format specifier like printf - 

__android_log_print(ANDROID_LOG_DEBUG, "LOG_TAG", "Need to print : %d %s",int_var, str_var);


Make sure you also link against the logging library, in your Android.mk file:

  LOCAL_LDLIBS := -llog


Ohh.. forgot .. The output will be shown in Logcat with tag LOG_TAG

Easy Approach

Add the following lines to your common header file.

#include <android/log.h>

#define  LOG_TAG    "your-log-tag"

#define  LOGD(...)  __android_log_print(ANDROID_LOG_DEBUG, LOG_TAG, __VA_ARGS__)
#define  LOGE(...)  __android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__)
// If you want you can add other log definition for info, warning etc


Now just call LOGD("Hello world") or LOGE("Number = %d", any_int) like printf in c.

Don't forget to include the common header file.

Remove the logging

If you define LOGD(...) empty, all logs will be gone. Just comment after LOGD(...).

#define LOGD(...) // __android_log..... rest of the code
    