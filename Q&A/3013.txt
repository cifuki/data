73
Q:I was looking at Android's SoundPool as a mechanism to implement sound effects in my generic game development library. It seemed ideal.

But a little bit of research indicates that there all kinds of bugs in SoundPool. Are the bugs in SoundPool still relevant?

Because I'm developing a library, any bugs in SoundPool become bugs in my library, and I want to insulate my users from that.

So my question is basically: what API should I use for audio?

Using AudioTrack and writing my own mixer is not out of the question. But obviously it would be preferable to avoid doing that. And is there any API to provide decoding for me?

I need to be able to play a reasonable number of simultaneous sound effects (at least 16, let's say), and have even more open. Sounds need to start playing with low latency. WAV files need to be supported (MP3/Ogg is unimportant). Sound effects need to support seamless looping and dynamic, individual volume adjustment. The Android app lifecycle needs to be properly supported.

I have heard there is a 1MB limit somewhere for SoundPool, this is probably acceptable for each individual sound effect but not for all buffers/sounds. Can someone tell me exactly what the limit is on?

Finally, I need to be able to play background music as well, in compressed formats, with low CPU load. I assume MediaPlayer is ideal for this. Can it be used in parallel with another API?

I know a few people have been using MediaPlayer to fill in for SoundPool. But does it support the features that I need?

Are there any other audio APIs I've missed?
    
===============================================================================================
15
A:Just to add some more recent feedback on this issue. I've been using SoundPool for some time in an app with a fairly large user base for key press sounds. Our use case:


Must be played immediately
Up to 3+ sounds in parallel
We make use of the setRate across it's full range [0.5f-2.0f]


I've now experienced two major device specific issue and have decided to cut my losses and switch away from SoundPool


A large number of 4.4 LG devices (mostly the LG G2/G3 line) were having a native crash with their implementation of SoundPool. This was fixed in an update (eventually) but we still have a lot of users with un-upgraded devices
Sony Xperia devices currently have all sorts of issue with SoundPool as reported by others. In my case, I've discovered that if you use setRate with rate > 1.0f the SoundPool with start throwing exceptions until your app quits (and burn through a bunch of battery in the process).


TL;DR; I no longer think it's worth the danger/hassle of debugging SoundPool
    