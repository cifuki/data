118
Q:I am attempting to use the android NDK.

Is there a way to return an array (in my case an int[]) created in JNI to Java?  If so, please provide a quick example of the JNI function that would do this.

-Thanks
    
===============================================================================================
110
A:If you've examined the documentation and still have questions that should be part of your initial question.  In this case, the JNI function in the example creates a number of arrays.  The outer array is comprised of an 'Object' array creating with the JNI function NewObjectArray().  From the perspective of JNI, that's all a two dimensional array is, an object array containing a number of other inner arrays.  

The following for loop creates the inner arrays which are of type int[] using the JNI function NewIntArray().  If you just wanted to return a single dimensional array of ints, then the NewIntArray() function is what you'd use to create the return value.  If you wanted to create a single dimensional array of Strings then you'd use the NewObjectArray() function but with a different parameter for the class.  

Since you want to return an int array, then your code is going to look something like this:

JNIEXPORT jintArray JNICALL Java_ArrayTest_initIntArray(JNIEnv *env, jclass cls, int size)
{
 jintArray result;
 result = (*env)->NewIntArray(env, size);
 if (result == NULL) {
     return NULL; /* out of memory error thrown */
 }
 int i;
 // fill a temp structure to use to populate the java int array
 jint fill[size];
 for (i = 0; i < size; i++) {
     fill[i] = 0; // put whatever logic you want to populate the values here.
 }
 // move from the temp structure to the java structure
 (*env)->SetIntArrayRegion(env, result, 0, size, fill);
 return result;
}

    