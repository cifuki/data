45
Q:How do we use a layer-list as a drawable for a button.
I have a button:
    

<item android:state_pressed="true">
    <shape>
        <gradient android:endColor="@color/white"
            android:startColor="@color/grey_blue_light" android:angle="90" />
        <stroke android:width="1dp" android:color="@color/aqua_blue" />
        <corners android:radius="3dp" />
        <padding android:left="10dp" android:top="10dp"
            android:right="10dp" android:bottom="10dp" />
    </shape>
</item>


<item android:state_focused="true">

</item>
<item>

</item>




Now I need a layer-list to be used as a shape when say button state is pressed:

<?xml version="1.0" encoding="UTF-8"?>
<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
<item>
    <shape android:shape="oval">
        <solid android:color="@color/aqua_blue" />
    </shape>
</item>
<item android:top="1dp" android:left="1dp" android:right="1dp" android:bottom="1dp">
    <shape android:shape="oval">
        <solid android:color="@color/aqua_blue" />
    </shape>
</item>




How do we use this layer list in the button selector?
    
===============================================================================================
123
A:Step-1
create three different layer_list xml under drawable folder for three different state of button. example  the name of those xml is layer1.xml, layer2.xml, layer3.xml

<?xml version="1.0" encoding="utf-8"?>
<layer-list
    xmlns:android="http://schemas.android.com/apk/res/android"
    >
    <item>
        <shape
            xmlns:android="http://schemas.android.com/apk/res/android"
            android:shape="rectangle"
            >

            <gradient
                android:angle="270"
                android:startColor="#0000ff"
                android:endColor="#0000dd"
                android:type="linear"
                />    
        </shape>
    </item>

</layer-list>


Step-2
create a selector xml named as btn_background.xml and pass the layer_list xml in drawable attribute

<selector
    xmlns:android="http://schemas.android.com/apk/res/android">

    <item android:state_pressed="true" android:drawable="@drawable/layer1">

    </item>

    <item android:state_focused="true" android:drawable="@drawable/layer2">

    </item>

    <item android:drawable="@drawable/layer3">        

    </item>
</selector>


step-3
Set the selector xml as background of the button android:background="@drawable/btn_background"
    