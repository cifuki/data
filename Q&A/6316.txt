40
Q:I'm attempting to use an HttpDelete object to invoke a web service's delete method.  The web service's code parses JSON from the message's body.  However, I'm failing to understand how to add a body to an HttpDelete object.  Is there a way to do this?

With HttpPut and HttpPost, I call the setEntity method and pass in my JSON.  There doesn't appear to be any such method for HttpDelete.

If there is no way to set a body for an HttpDelete object, could you please link me to a resource that uses a super class of HttpDelete such that I can set the method (delete) and set a body.  I know that isn't ideal, but at this point I can't alter the web service.
    
===============================================================================================
92
A:Have you tried overriding HttpEntityEnclosingRequestBase as follows:

import org.apache.http.client.methods.HttpEntityEnclosingRequestBase;
import java.net.URI;
import org.apache.http.annotation.NotThreadSafe;

@NotThreadSafe
class HttpDeleteWithBody extends HttpEntityEnclosingRequestBase {
    public static final String METHOD_NAME = "DELETE";
    public String getMethod() { return METHOD_NAME; }

    public HttpDeleteWithBody(final String uri) {
        super();
        setURI(URI.create(uri));
    }
    public HttpDeleteWithBody(final URI uri) {
        super();
        setURI(uri);
    }
    public HttpDeleteWithBody() { super(); }
}


That will create a HttpDelete-lookalike that has a setEntity method.  I think the abstract class does almost everything for you, so that may be all that's needed.

FWIW, the code is based on this source to HttpPost that Google turned up.
    