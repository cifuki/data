55
Q:I need some help finding information (or an example) of how to use texture compression for Android. I have a lot of PNG's right now and I need to reduce the amount of memory they take up. I was looking at PVR compression but I can't figure out how to use this within OpenGL.

Could some point me in the right direction or offer some examples as I cannot find anything.
    
===============================================================================================
84
A:There are mainly four texture compression types supported on Android:


ETC1 (Ericsson texture compression). This format is supported by all Android phones. But, it doesn't support an alpha channel, so can only be used for opaque textures.
PVRTC (PowerVR texture compression). Supported by devices with PowerVR GPUs (Nexus S, Kindle fire, etc.).
ATITC (ATI texture compression). Used in devices with Adreno GPU from Qualcomm (Nexus One, etc.).
S3TC (S3 texture compression). This texture compression is used in the NVIDIA chipset integrated devices (Motorola Xoom, etc.)


More detailed information here and here.

In short, if your textures don't have alpha, you can use ETC1. If they do have alpha, and you want to support all devices, you must have your textures compressed in the other three types and load them according to the device. 

How to use:


Compress your png files (You can use a tool like ETC-Pack, PVRTexTool, ATI Compressonator, Nvidia Texure Tools according to the type of texture) and add to your project assets.
Determine which extensions are available in the device, if you're not using ETC1:

public void onSurfaceCreated(GL10 gl, EGLConfig config) {

     String s = gl.glGetString(GL10.GL_EXTENSIONS);

     if (s.contains("GL_IMG_texture_compression_pvrtc")){
          //Use PVR compressed textures         
     }else if (s.contains("GL_AMD_compressed_ATC_texture") ||
              s.contains("GL_ATI_texture_compression_atitc")){
          //Load ATI Textures           
     }else if (s.contains("GL_OES_texture_compression_S3TC") ||
                s.contains("GL_EXT_texture_compression_s3tc")){
         //Use DTX Textures
     }else{
         //Handle no texture compression founded.               
     }

}           

Load compressed texture as raw data.
Use glCompressedTexImage2D instead of glTexImage2D:

public void onDrawFrame(GL10 gl) {

   ....

   gl.glCompressedTexImage2D(GL10.GL_TEXTURE_2D, level, internalformat, width, 
                             height, border, imageSize, data);

}


    