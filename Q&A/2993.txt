73
Q:This week I've been learning all about ContentProvider and using the SQLiteOpenHelper class to manage the creation and upgrading of the database inside of a provider.  Specifically, I've been reading through the NotePad example from the sdk's samples directory.  

Now, I can see that SQLiteOpenHelper has a close() method.  I'm aware that leaving idle databases open is bad practice and can cause memory leaks and whatnot (unless this discussion is headed in the right direction).  If I were using the class in an Activity, then I would simply call close() in the onDestroy() method, but as far as I know, ContentProvider does not have the same life cycle that activities do.  The code for NotePad never seems to call close(), so I would like to assume that it is handled by SQLiteOpenHelper or some other piece of the puzzle, but I'd really like to know for sure.  I don't really trust the sample code that much, either...

Question summary:  When should we close the database in a provider, if at all?
    
===============================================================================================
90
A:According to Dianne Hackborn (Android framework engineer) there is no need to close the database in a content provider.


  A content provider is created when its hosting process is created, and
  remains around for as long as the process does, so there is no need to
  close the database -- it will get closed as part of the kernel
  cleaning up the process's resources when the process is killed.


Thanks @bigstones for pointing this out.
    