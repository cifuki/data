98
Q:It must be stupid question, but I'm really new to Kotlin and I didn't find any solution.

How to declare class field? Like we can have it in java:

protected SharedPreferences mSharedPreferences;


And later in onCreate():  

mSharedPreferences = PreferenceManager.getDefaultSharedPreferences(this)


Now I can use it anywhere I want (in subclasses of this base activity).

I try to do same in Kotlin:

protected var sharedPreferences : SharedPreferences


And in onCreate():

sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this)


But I get a warning: "Property must be initialized or be abstract"
    
===============================================================================================
153
A:If you'd like to initialize a property outside the constructor, then late-initialized properties is what you may be looking for. Declare the property with the lateinit modifier, which will allow to skip the otherwise required initializer and will make the property access fail with exception until some meaningful value is assigned to it:

protected lateinit var sharedPreferences: SharedPreferences

    