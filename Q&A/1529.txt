117
Q:I am setting text using setText() by following way.

prodNameView.setText("" + name);

prodOriginalPriceView.setText("" + String.format(getString(R.string.string_product_rate_with_ruppe_sign), "" + new BigDecimal(price).setScale(2, RoundingMode.UP)));


In that First one is simple use and Second one is setting text with formatting text.

Android Studio is so much interesting, I used Menu Analyze -> Code Cleanup and i got suggestion on above two lines like.




  Do not concatenate text displayed with setText. Use resource string
  with placeholders. less... (Ctrl+F1) 
  
  When calling TextView#setText:
  
  
  Never call Number#toString() to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider
  using String#format with proper format specifications (%d or %f)
  instead. 
  Do not pass a string literal (e.g. "Hello") to display text. Hardcoded text can not be properly translated to other languages.
  Consider using Android resource strings instead. 
  Do not build messages by concatenating text chunks. Such messages can not be properly translated.
  


What I can do for this? Anyone can help explain what the thing is and what should I do?
    
===============================================================================================
250
A:Resource has the get overloaded version of getString which takes a varargs of type Object: getString(int, java.lang.Object...). If you setup correctly your string in strings.xml, with the correct place holders, you can use this version to retrieve the formatted version of your final String. E.g.  

<string name="welcome_messages">Hello, %1$s! You have %2$d new messages.</string>


using getString(R.string.welcome_message, "Test", 0);

android will return a String with 

 Hello Test! you have 0 new messages


About setText("" + name);

Your first Example, prodNameView.setText("" + name); doesn't make any sense to me. The TextView is able to handle null values. If name is null, no text will be drawn.
    