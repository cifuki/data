27
Q:In my application i have to validate the edittext. It should only allow character, digits, underscore and hypen.

Here is my code:

edittext.addTextChangedListener(new TextWatcher() {

                        @Override
                        public void onTextChanged(CharSequence s, int start, int before, int count) {
                            // TODO Auto-generated method stub

                            }

                        @Override
                        public void beforeTextChanged(CharSequence s, int start, int count,
                        int after) {
                                            // TODO Auto-generated method stub

                            }

                                        @Override
                            public void afterTextChanged(Editable s) {
                                            // validation codes here

                            location_name=s.toString();
                            Toast.makeText(getApplicationContext(),location_name, Toast.LENGTH_SHORT).show();                

                            if (location_name.matches(".*[^a-z^0-9].*")) 
                                {
                            location_name = location_name.replaceAll("[^a-z^0-9]", "");
                            s.append(location_name);
                            s.clear();
                            Toast.makeText(getApplicationContext(),"Only lowercase letters and numbers are allowed!",Toast.LENGTH_SHORT).show();

                            }

                            }

                        });     

location.add(location_name);


in this , when i entered input in edittext ,application is force closed.please give me suggestion.Thanks in advance.            
    
===============================================================================================
61
A:Instead of using your "manual" checking method, there is something very easy in Android:

InputFilter filter = new InputFilter() { 
    public CharSequence filter(CharSequence source, int start,
                               int end, Spanned dest, int dstart, int dend) { 

        for (int i = start;i < end;i++) { 
            if (!Character.isLetterOrDigit(source.charAt(i)) && 
                !Character.toString(source.charAt(i)).equals("_") && 
                !Character.toString(source.charAt(i)).equals("-")) 
            { 
                return ""; 
            } 
        } 
        return null; 
    } 
}; 

edittext.setFilters(new InputFilter[] { filter }); 


Or another approach: set the allowed characters in the XML where you are creating your EditText:

<EditText 
  android:inputType="text" 
  android:digits="0,1,2,3,4,5,6,7,8,9,*,qwertzuiopasdfghjklyxcvbnm,_,-" 
  android:hint="Only letters, digits, _ and - allowed" />

    