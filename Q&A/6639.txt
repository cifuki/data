39
Q:I was looking at the documentation and found this  


  This class was deprecated in API level P.


Why are fragments deprecated in android P? 
    
===============================================================================================
23
A:The rewrite in Support Library 27.1.0

Ian's medium post (Feb 28, 2018) gives us an explanation about it. He is Android Framework Developer at Google.


  Loaders in Support Library\xc2\xa027.1.0  
  
  For\xc2\xa0Support Library 27.1.0, I rewrote the internals of\xc2\xa0LoaderManager, the class powering the\xc2\xa0Loaders API\xc2\xa0and I wanted to explain the reasoning behind the changes and what to expect going forward.
  
  Loaders and Fragments, a\xc2\xa0history
  From the beginning, Loaders and Fragments were pretty tightly tied together at the hip. This meant that a lot of the code in\xc2\xa0FragmentActivity\xc2\xa0and\xc2\xa0Fragment\xc2\xa0were there to support Loaders, despite the fact that there are indeed fairly independent. \xe2\x80\xa6
  
  What\xe2\x80\x99s changed in\xc2\xa027.1.0
  With 27.1.0, the technical debt of Loaders has been greatly reduced: \xe2\x80\xa6  
  
  \xe2\x80\xa6  
  
  Note: Obviously, these changes only apply to Support Library Loaders. If you are using Android framework Loaders, please switch to the Support Library Loaders as soon as possible. There are no bug fixes or improvements planned for the framework Loader APIs.


It seems like the code in Fragment and FragmentActivity has been refactored in order to make Loaders an optional dependency.

According to the release note, the new implementation is based on Lifecycle.


  Important Changes
  The underlying implementation of\xc2\xa0Loaders\xc2\xa0has been rewritten to use\xc2\xa0Lifecycle.


Architecture Components

In Support Library 26.1.0, Fragment\xc2\xa0and\xc2\xa0FragmentActivity has adopted Lifecycle.


  This is a special release to integrate the Support Library with\xc2\xa0Lifecycles\xc2\xa0from\xc2\xa0Architecture Components. If you are not using the Lifecycles library, you don\xe2\x80\x99t need to update from 26.0.2. For more information, see the\xc2\xa0Architecture Components release notes.  
  
  Important changes  
  
  
  Fragment\xc2\xa0and\xc2\xa0FragmentActivity\xc2\xa0(the base class for\xc2\xa0AppCompatActivity) now implement the\xc2\xa0LifecycleOwner\xc2\xa0interface from\xc2\xa0Architecture Components.
  


By contrast, Fragment and Activity in Android P have not implemented the interface LifecycleOwner. 

In the Google+ post (mentioned in ThanosFisherman\xe2\x80\x99s answer), Ian made a comment:


  you can't change framework code after it has shipped - it is literally frozen in time. That means no new features and more importantly no bug fixes. That's not a good developer experience, particularly when we do have a fully supported, up to date, backward compatible version in the Support Library.


I think that\xe2\x80\x99s the reason why Android P doesn't adopt Lifecycle. Consequently Fragment is deprecated in Android P.
    