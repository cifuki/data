38
Q:Can someone tell me what the convertView parameter is used for in the getView() method of the Adapter class?

Here is a sample code take from here:

@Override
public View getView(int position, View convertView, ViewGroup parent) {
    View v = convertView;
    if (v == null) {
        LayoutInflater vi = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        v = vi.inflate(R.layout.row, null);
    }
    Order o = items.get(position);
    if (o != null) {
        TextView tt = (TextView) v.findViewById(R.id.toptext);
        TextView bt = (TextView) v.findViewById(R.id.bottomtext);
        if (tt != null) {
            tt.setText("Name: "+o.getOrderName());                            }
        if(bt != null){
            bt.setText("Status: "+ o.getOrderStatus());
        }
    }
    return v;
}


What should we pass via convertView? 

What I've found, take from here:


  Get a View that displays the data at the specified position in the
  data set. You can either create a View manually or inflate it from an
  XML layout file. When the View is inflated, the parent View (GridView,
  ListView...) will apply default layout parameters unless you use
  inflate(int, android.view.ViewGroup, boolean) to specify a root view
  and to prevent attachment to the root.
  
  Parameters
  
  position -- The position of the item within the adapter's data set of the item whose  view we want.
  
  convertView -- The old view to reuse, if possible. Note: You should check that this view is non-null and of an appropriate type before
  using. If it is not possible to convert this view to display the
  correct data, this method can create a new view.
  
  parent -- The parent that this view will eventually be attached to Returns
  
  returns -- A View corresponding to the data at the specified position.

    
===============================================================================================
38
A:You shouldn't be calling that method by yourself.

Android's ListView uses an Adapter to fill itself with Views. When the ListView is shown, it starts calling getView() to populate itself. When the user scrolls a new view should be created, so for performance the ListView sends the Adapter an old view that it's not used any more in the convertView param.
    