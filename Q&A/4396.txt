54
Q:Is there a way to set the minimum, maximum and default values of a NumberPicker from the XML Layout?

I'm doing it from within the Activity code:

np = (NumberPicker) findViewById(R.id.np);
np.setMaxValue(120);
np.setMinValue(0);
np.setValue(30);


XML is obviously more appropriate , because it defines property, not behaviour. 

Is there a way to set these using the XML layout?
    
===============================================================================================
56
A:I had the same problem, this is how I solved it (according to the comment of MKJParekh):


I created my own NumberPicker-Class

package com.exaple.project;

import android.annotation.TargetApi;
import android.content.Context;
import android.os.Build;
import android.util.AttributeSet;
import android.widget.NumberPicker;

@TargetApi(Build.VERSION_CODES.HONEYCOMB)//For backward-compability
public class MyNumberPicker extends NumberPicker {

    public MyNumberPicker(Context context) {
        super(context);
    }

    public MyNumberPicker(Context context, AttributeSet attrs) {
        super(context, attrs);
        processAttributeSet(attrs);
    }

    public MyNumberPicker(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        processAttributeSet(attrs);
    }
    private void processAttributeSet(AttributeSet attrs) {
        //This method reads the parameters given in the xml file and sets the properties according to it
        this.setMinValue(attrs.getAttributeIntValue(null, "min", 0));
        this.setMaxValue(attrs.getAttributeIntValue(null, "max", 0));
    }
}

Now you can use this NumberPicker in your xml layout file

<com.exaple.project.myNumberPicker
    android:id="@+id/numberPicker1"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:layout_gravity="center"
    android:orientation="vertical"
    max="100"
    min="1" />



Thanks to MKJParekh for his useful comment
    